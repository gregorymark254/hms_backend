"""migration

Revision ID: b3a5aa773fae
Revises: 
Create Date: 2024-08-09 17:33:57.383008

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = 'b3a5aa773fae'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('doctors',
    sa.Column('doctorId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('firstName', sa.String(length=50), nullable=False),
    sa.Column('lastName', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phoneNumber', sa.String(length=50), nullable=False),
    sa.Column('speciality', sa.String(length=50), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('doctorId')
    )
    op.create_index(op.f('ix_doctors_email'), 'doctors', ['email'], unique=False)
    op.create_table('patients',
    sa.Column('patientId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('firstName', sa.String(length=50), nullable=False),
    sa.Column('lastName', sa.String(length=50), nullable=False),
    sa.Column('dateOfBirth', sa.Date(), nullable=False),
    sa.Column('gender', sa.String(length=10), nullable=False),
    sa.Column('address', sa.String(length=20), nullable=False),
    sa.Column('phoneNumber', sa.String(length=20), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('emergencyNumber', sa.String(length=20), nullable=False),
    sa.Column('insuranceNumber', sa.String(length=20), nullable=False),
    sa.Column('insuranceName', sa.String(length=50), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('patientId')
    )
    op.create_index(op.f('ix_patients_email'), 'patients', ['email'], unique=False)
    op.create_table('prescription',
    sa.Column('prescriptionId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('prescriptionName', sa.String(length=50), nullable=False),
    sa.Column('dosage', sa.String(length=50), nullable=False),
    sa.Column('instructions', sa.String(length=50), nullable=False),
    sa.Column('duration', sa.String(length=10), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('prescriptionId')
    )
    op.create_table('appointments',
    sa.Column('appointmentId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('appointmentDate', sa.Date(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'confirmed', name='appointmentenum'), nullable=True),
    sa.Column('patientId', sa.Integer(), nullable=False),
    sa.Column('doctorId', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['doctorId'], ['doctors.doctorId'], ),
    sa.ForeignKeyConstraint(['patientId'], ['patients.patientId'], ),
    sa.PrimaryKeyConstraint('appointmentId')
    )
    op.create_index(op.f('ix_appointments_doctorId'), 'appointments', ['doctorId'], unique=False)
    op.create_index(op.f('ix_appointments_patientId'), 'appointments', ['patientId'], unique=False)
    op.create_table('billing',
    sa.Column('billingId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('billingDate', sa.Date(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('patientId', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patientId'], ['patients.patientId'], ),
    sa.PrimaryKeyConstraint('billingId')
    )
    op.create_index(op.f('ix_billing_patientId'), 'billing', ['patientId'], unique=False)
    op.create_table('medication',
    sa.Column('medicationId', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('diagnosis', sa.String(length=255), nullable=False),
    sa.Column('treatment', sa.String(length=255), nullable=False),
    sa.Column('notes', sa.String(length=255), nullable=False),
    sa.Column('patientId', sa.Integer(), nullable=False),
    sa.Column('prescriptionId', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['patientId'], ['patients.patientId'], ),
    sa.ForeignKeyConstraint(['prescriptionId'], ['prescription.prescriptionId'], ),
    sa.PrimaryKeyConstraint('medicationId')
    )
    op.create_index(op.f('ix_medication_patientId'), 'medication', ['patientId'], unique=False)
    op.create_index(op.f('ix_medication_prescriptionId'), 'medication', ['prescriptionId'], unique=False)
    op.drop_table('suppliers')
    op.drop_index('fk_orders_product1_idx', table_name='orders')
    op.drop_index('fk_orders_users1_idx', table_name='orders')
    op.drop_table('orders')
    op.drop_index('email', table_name='attendance')
    op.drop_index('first_name', table_name='attendance')
    op.drop_index('last_name', table_name='attendance')
    op.drop_index('phone', table_name='attendance')
    op.drop_table('attendance')
    op.drop_table('category')
    op.drop_index('fk_product_category1_idx', table_name='product')
    op.drop_index('fk_product_suppliers_idx', table_name='product')
    op.drop_table('product')
    op.drop_index('email', table_name='customer')
    op.drop_index('username', table_name='customer')
    op.drop_table('customer')
    op.drop_index('event_name', table_name='events')
    op.drop_table('events')
    op.drop_index('email', table_name='user')
    op.drop_index('username', table_name='user')
    op.drop_table('user')
    op.add_column('payments', sa.Column('transactionId', sa.Integer(), nullable=False))
    op.add_column('payments', sa.Column('patientId', sa.Integer(), nullable=False))
    op.add_column('payments', sa.Column('billingId', sa.Integer(), nullable=False))
    op.add_column('payments', sa.Column('createdAt', sa.DateTime(), nullable=True))
    op.alter_column('payments', 'paymentMethod',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=20),
               existing_nullable=False)
    op.alter_column('payments', 'paymentDate',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_index('fk_payments_orders1_idx', table_name='payments')
    op.create_index(op.f('ix_payments_billingId'), 'payments', ['billingId'], unique=False)
    op.create_index(op.f('ix_payments_patientId'), 'payments', ['patientId'], unique=False)
    op.create_index(op.f('ix_payments_transactionId'), 'payments', ['transactionId'], unique=True)
    op.drop_constraint('fk_payments_orders1', 'payments', type_='foreignkey')
    op.create_foreign_key(None, 'payments', 'billing', ['billingId'], ['billingId'])
    op.create_foreign_key(None, 'payments', 'patients', ['patientId'], ['patientId'])
    op.drop_column('payments', 'orderId')
    op.add_column('users', sa.Column('password_hash', sa.String(length=255), nullable=False))
    op.alter_column('users', 'firstName',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('users', 'lastName',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('users', 'role',
               existing_type=mysql.VARCHAR(length=45),
               type_=sa.Enum('admin', 'doctor', 'patient', 'pharmacy', name='role'),
               existing_nullable=False,
               existing_server_default=sa.text("'user'"))
    op.alter_column('users', 'createdAt',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.drop_column('users', 'password')
    op.drop_column('users', 'phoneNumber')
    op.drop_column('users', 'updatedAt')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('updatedAt', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False))
    op.add_column('users', sa.Column('phoneNumber', mysql.VARCHAR(length=15), nullable=False))
    op.add_column('users', sa.Column('password', mysql.VARCHAR(length=255), nullable=False))
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.alter_column('users', 'createdAt',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'role',
               existing_type=sa.Enum('admin', 'doctor', 'patient', 'pharmacy', name='role'),
               type_=mysql.VARCHAR(length=45),
               existing_nullable=False,
               existing_server_default=sa.text("'user'"))
    op.alter_column('users', 'lastName',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=45),
               existing_nullable=False)
    op.alter_column('users', 'firstName',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=45),
               existing_nullable=False)
    op.drop_column('users', 'password_hash')
    op.add_column('payments', sa.Column('orderId', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'payments', type_='foreignkey')
    op.drop_constraint(None, 'payments', type_='foreignkey')
    op.create_foreign_key('fk_payments_orders1', 'payments', 'orders', ['orderId'], ['orderId'])
    op.drop_index(op.f('ix_payments_transactionId'), table_name='payments')
    op.drop_index(op.f('ix_payments_patientId'), table_name='payments')
    op.drop_index(op.f('ix_payments_billingId'), table_name='payments')
    op.create_index('fk_payments_orders1_idx', 'payments', ['orderId'], unique=False)
    op.alter_column('payments', 'paymentDate',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('payments', 'paymentMethod',
               existing_type=sa.String(length=20),
               type_=mysql.VARCHAR(length=45),
               existing_nullable=False)
    op.drop_column('payments', 'createdAt')
    op.drop_column('payments', 'billingId')
    op.drop_column('payments', 'patientId')
    op.drop_column('payments', 'transactionId')
    op.create_table('user',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', mysql.VARCHAR(length=80), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=120), nullable=False),
    sa.Column('role', mysql.ENUM('admin', 'user'), nullable=False),
    sa.Column('password', mysql.VARCHAR(length=80), nullable=False),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_index('username', 'user', ['username'], unique=True)
    op.create_index('email', 'user', ['email'], unique=True)
    op.create_table('events',
    sa.Column('event_id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('event_name', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('event_description', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('event_date', mysql.DATETIME(), nullable=False),
    sa.Column('event_location', mysql.VARCHAR(length=255), nullable=False),
    sa.PrimaryKeyConstraint('event_id'),
    mysql_default_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_index('event_name', 'events', ['event_name'], unique=True)
    op.create_table('customer',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', mysql.VARCHAR(length=80), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=120), nullable=False),
    sa.Column('role', mysql.ENUM('admin', 'user'), nullable=False),
    sa.Column('password', mysql.VARCHAR(length=80), nullable=False),
    sa.Column('created_at', mysql.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_index('username', 'customer', ['username'], unique=True)
    op.create_index('email', 'customer', ['email'], unique=True)
    op.create_table('product',
    sa.Column('productId', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('productName', mysql.VARCHAR(length=45), nullable=False),
    sa.Column('productDescription', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('productPrice', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('stocklevel', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('supplierId', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('categoryId', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('createdAt', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['categoryId'], ['category.categoryId'], name='fk_product_category1'),
    sa.ForeignKeyConstraint(['supplierId'], ['suppliers.supplierId'], name='fk_product_suppliers'),
    sa.PrimaryKeyConstraint('productId'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('fk_product_suppliers_idx', 'product', ['supplierId'], unique=False)
    op.create_index('fk_product_category1_idx', 'product', ['categoryId'], unique=False)
    op.create_table('category',
    sa.Column('categoryId', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('categoryName', mysql.VARCHAR(length=45), nullable=False),
    sa.PrimaryKeyConstraint('categoryId'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_table('attendance',
    sa.Column('attendance_id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('first_name', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('last_name', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('email', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('phone', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('event_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['events.event_id'], name='attendance_ibfk_1'),
    sa.PrimaryKeyConstraint('attendance_id'),
    mysql_default_charset='utf8',
    mysql_engine='InnoDB'
    )
    op.create_index('phone', 'attendance', ['phone'], unique=True)
    op.create_index('last_name', 'attendance', ['last_name'], unique=True)
    op.create_index('first_name', 'attendance', ['first_name'], unique=True)
    op.create_index('email', 'attendance', ['email'], unique=True)
    op.create_table('orders',
    sa.Column('orderId', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('userId', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('productId', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('quantity', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('status', mysql.VARCHAR(length=45), server_default=sa.text("'pending'"), nullable=False),
    sa.Column('paymentStatus', mysql.VARCHAR(length=10), server_default=sa.text("'pending'"), nullable=False),
    sa.Column('createdAt', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updatedAt', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['productId'], ['product.productId'], name='fk_orders_product1'),
    sa.ForeignKeyConstraint(['userId'], ['users.userId'], name='fk_orders_users1'),
    sa.PrimaryKeyConstraint('orderId'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.create_index('fk_orders_users1_idx', 'orders', ['userId'], unique=False)
    op.create_index('fk_orders_product1_idx', 'orders', ['productId'], unique=False)
    op.create_table('suppliers',
    sa.Column('supplierId', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('supplierName', mysql.VARCHAR(length=45), nullable=False),
    sa.Column('contactPerson', mysql.VARCHAR(length=45), nullable=True),
    sa.Column('contactNumber', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('email', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('Address', mysql.VARCHAR(length=255), nullable=False),
    sa.Column('createdAt', mysql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('supplierId'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    op.drop_index(op.f('ix_medication_prescriptionId'), table_name='medication')
    op.drop_index(op.f('ix_medication_patientId'), table_name='medication')
    op.drop_table('medication')
    op.drop_index(op.f('ix_billing_patientId'), table_name='billing')
    op.drop_table('billing')
    op.drop_index(op.f('ix_appointments_patientId'), table_name='appointments')
    op.drop_index(op.f('ix_appointments_doctorId'), table_name='appointments')
    op.drop_table('appointments')
    op.drop_table('prescription')
    op.drop_index(op.f('ix_patients_email'), table_name='patients')
    op.drop_table('patients')
    op.drop_index(op.f('ix_doctors_email'), table_name='doctors')
    op.drop_table('doctors')
    # ### end Alembic commands ###
